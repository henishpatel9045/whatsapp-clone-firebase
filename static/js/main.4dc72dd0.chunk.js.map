{"version":3,"sources":["firebase.js","SidebarChat.js","Sidebar.js","StateProvider.js","Chat.js","reducer.js","Login.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","SidebarChat","props","useState","seed","setSeed","messages","setmessages","useEffect","Math","floor","random","id","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","btn_exists","addNewChat","to","className","Avatar","src","name","onClick","roomName","prompt","add","Sidebar","rooms","setrooms","search_query","setsearch_query","unsubscribe","user","photoURL","IconButton","SearchOutlined","placeholder","onChange","e","target","value","room","toLowerCase","includes","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","useReducer","useStateValue","useContext","Chat","input","setinput","roomId","useParams","setroomName","round","chats","c","displayName","push","ChatMessage","message","timestamp","chatReceiver","ChatHeader","Date","lastItem","toLocaleTimeString","class","ChatFooter","onSubmit","preventDefault","console","log","FieldValue","serverTimestamp","AttachFile","classes","dateD","toDate","dateDisplay","getDate","getMonth","getHours","getMinutes","style","color","InsertEmoticon","type","actionTypes","state","action","Login","dispatch","Button","signInWithPopup","then","result","catch","error","alert","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4dc72dd0.chunk.js","sourcesContent":["import firebase from \"firebase\"\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDZF_T2L4yn_cosRI2DePiZPizjEP-ahS8\",\r\n    authDomain: \"what-sappclone-10b89.firebaseapp.com\",\r\n    projectId: \"what-sappclone-10b89\",\r\n    storageBucket: \"what-sappclone-10b89.appspot.com\",\r\n    messagingSenderId: \"705061848533\",\r\n    appId: \"1:705061848533:web:89c40018b15f8ca56fe95c\",\r\n    measurementId: \"G-9XDEP88H7Q\"\r\n  };\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport { auth, provider }\r\nexport default db;\r\n","import { Avatar } from '@material-ui/core';\r\nimport { SettingsEthernetRounded } from '@material-ui/icons';\r\nimport React, {useEffect, useState} from 'react';\r\nimport \"./SidebarChat.css\";\r\nimport db from \"./firebase\";\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nfunction SidebarChat(props) {\r\n    const [seed, setSeed] = useState(\"\");\r\n    const [messages, setmessages] = useState(\"\");\r\n    useEffect(()=>{\r\n            setSeed(Math.floor(Math.random() * 5000));\r\n            if(props.id){\r\n                db.collection('rooms')\r\n                        .doc(props.id)\r\n                        .collection('messages')\r\n                        .orderBy('timestamp', 'desc')\r\n                        .onSnapshot((snapshot) => {\r\n                            setmessages(snapshot.docs.map(doc => \r\n                                doc.data()))\r\n                        });\r\n            }\r\n        }, [props.id]);\r\n        \r\n    let btn_exists = false;\r\n\r\n    const createChat = ()=>{\r\n        const roomName = prompt(\"Room Name? \");\r\n\r\n        if(roomName){\r\n            db.collection(\"rooms\").add({\r\n                name: roomName,\r\n            });\r\n        }\r\n    }\r\n    return !props.addNewChat || btn_exists ? (\r\n        <Link to={`/rooms/${props.id}`}>\r\n            <div className=\"sidebarChat\">\r\n                <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`}/>\r\n                <div className=\"sidebarChat__info\">\r\n                    <h2>{props.name}</h2>\r\n                    <p>{messages[0]?.messages}</p>\r\n                </div>\r\n            </div>\r\n        </Link>\r\n    ) : (\r\n        <div onClick={createChat} className=\"sidebarChat addNewChat\">\r\n            <h2>Add New Chat</h2>{btn_exists = true}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SidebarChat\r\n","import React from 'react';\r\nimport './Sidebar.css';\r\nimport {Avatar, IconButton} from \"@material-ui/core\";\r\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { SearchOutlined } from '@material-ui/icons';\r\nimport SidebarChat from './SidebarChat';\r\nimport db from './firebase';\r\nimport { useState, useEffect } from 'react';\r\n\r\nfunction Sidebar(props){\r\n    const [rooms, setrooms] = useState([])\r\n    const [search_query, setsearch_query] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        \r\n        const unsubscribe = db.collection(\"rooms\").onSnapshot((snapshot)=>{\r\n            setrooms(\r\n                snapshot.docs.map((doc)=>({\r\n                   id: doc.id,\r\n                   data: doc.data(), \r\n                }))\r\n            )\r\n        });\r\n        return ()=>{\r\n            unsubscribe();\r\n        }\r\n        \r\n    }, [])\r\n\r\n    return(\r\n        <div className=\"sidebar\">\r\n            <div className=\"sidebar__header\">\r\n                <Avatar src={props.user?.photoURL} />\r\n                <div className=\"sidebar__headerRight\">\r\n                    <IconButton>\r\n                        <DonutLargeIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <ChatIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVertIcon />\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n            \r\n            <div className=\"sidebar__search\">\r\n                <div className=\"sidebar__searchContainer\">\r\n                    <SearchOutlined />\r\n                    <input placeholder=\"Search or start new chat\" onChange={e=>setsearch_query(e.target.value)} />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"sidebar__chats\">\r\n                <SidebarChat addNewChat/>\r\n                {rooms.map(room => (\r\n                    room.data.name?.toLowerCase().includes(search_query?.toLowerCase()) ? <SidebarChat key={room.id} id={room.id} name={room.data.name} /> : \"\"\r\n                ))}\r\n           \r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar;","import React, {createContext, useContext, useReducer} from 'react'\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({reducer,\r\ninitialState, children }) => (\r\n    <StateContext.Provider value={useReducer(reducer,initialState)}>\r\n        {children}\r\n    </StateContext.Provider>\r\n);\r\n\r\nexport const useStateValue = () => useContext(StateContext);\r\n","import { Avatar, IconButton } from '@material-ui/core'\r\nimport { AttachFile, InsertEmoticon, SearchOutlined } from '@material-ui/icons'\r\nimport MicIcon from '@material-ui/icons/Mic'\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\r\nimport React from 'react'\r\nimport { useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport db from './firebase'\r\nimport { useEffect } from 'react'\r\nimport { useStateValue } from './StateProvider'\r\nimport firebase from 'firebase'\r\n\r\nexport default function Chat(props) {\r\n    const [input, setinput] = useState(\"\");\r\n    const [messages, setmessages] = useState([]);\r\n    const {roomId} = useParams();\r\n    const [roomName, setroomName] = useState(\"\");\r\n    const [{user}, dispatch] = useStateValue();\r\n    let src = `https://avatars.dicebear.com/api/human/${Math.round(Math.random()*5000)}.svg`;\r\n\r\n    useEffect(() => {\r\n        if(roomId){\r\n            db.collection('rooms').doc(roomId).onSnapshot(snapshot=>(\r\n                setroomName(snapshot.data().name)\r\n            ));\r\n            \r\n            db.collection('rooms')\r\n            .doc(roomId)\r\n            .collection('messages')\r\n            .orderBy('timestamp', 'asc')\r\n            .onSnapshot((snapshot) => {\r\n                setmessages(snapshot.docs.map(doc => doc.data()))\r\n                \r\n            });\r\n        }\r\n    }, [roomId])\r\n\r\n    let chats = []\r\n    messages.map(c => {\r\n        c.name===user.displayName ?\r\n        chats.push(<ChatMessage name={\"You\"} message={c.messages} timestamp={c.timestamp} chatReceiver />) :\r\n        chats.push(<ChatMessage name={c.name} message={c.messages} timestamp={c.timestamp}/>);\r\n    })\r\n    \r\n    const sendMessage = (e)=>{\r\n        e.preventDefault();\r\n        console.log(input);\r\n        db.collection('rooms').doc(roomId).collection('messages').add({\r\n            name: user.displayName,\r\n            messages: input,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        })\r\n        setinput(\"\");\r\n    }\r\n    \r\n    return (\r\n        <div className=\"chat\">\r\n            <ChatHeader name={roomName} src={src} timestamp={new Date(messages.lastItem?.timestamp).toLocaleTimeString()}/>\r\n\r\n            <div class=\"chat__body\">\r\n                {chats}\r\n            </div>\r\n          \r\n            <ChatFooter onSubmit={sendMessage} input={input} setinput={(e)=>{\r\n                setinput(e);\r\n            }} />\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction ChatHeader(props){\r\n\r\n    return(\r\n        <div className=\"chat__header\">\r\n                <Avatar src={props.src} />\r\n                <div className=\"chat__headerLeft\">\r\n                    <h2>{props.name}</h2>\r\n                    <p>Last seen at {props.timestamp?props.timestamp:\"\"}</p>\r\n                </div>\r\n                <div className=\"chat__headerRight\">\r\n                    <IconButton>\r\n                        <SearchOutlined/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <AttachFile/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVertIcon/>\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nfunction ChatBody(props){\r\n    return (\r\n        <div class=\"chat__body\">\r\n            {props.chats}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction ChatMessage(props){\r\n    const text_colors = [\"#42d09d\",\"#e544a4\",\"#78cff0\"]\r\n    const classes = props.chatReceiver ? \"chat__message chat__receiver\" : \"chat__message\";\r\n    let dateD = new Date(props.timestamp?.toDate());\r\n    let dateDisplay = \"\"+dateD.getDate()+\r\n        \"-\"+\r\n        dateD.getMonth()+\" \"+\r\n        dateD.getHours()+\r\n        \":\"+dateD.getMinutes();\r\n    return (\r\n        <div className=\"\">\r\n            \r\n            <p className={classes}>\r\n            <span className=\"chat__message__chatname\" \r\n                style={{color:text_colors[0]}}>\r\n                    {props.name}\r\n            </span>\r\n                {props.message}\r\n            <span className=\"chat__message__timestamp\">{dateDisplay}</span></p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nfunction ChatFooter(props){\r\n\r\n    return(\r\n        <div className=\"chat__footer\">\r\n            <IconButton>\r\n                <InsertEmoticon/>\r\n            </IconButton>\r\n            <form onSubmit={(e)=>props.onSubmit(e)}>\r\n                <input type=\"text\" placeholder=\"Type a message\" \r\n                value={props.input} onChange={(e)=>{\r\n                    props.setinput(e.target.value);                    \r\n                }}\r\n                 />\r\n                <button>Send a Message</button>\r\n            </form>\r\n            <IconButton>\r\n                <MicIcon/>\r\n            </IconButton>\r\n        </div>\r\n    )\r\n}","export const initialState = {\r\n    user: null,\r\n};\r\n\r\nexport const actionTypes = {\r\n    SET_USER: \"SET_USER\",\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n    // console.log(action);\r\n    switch (action.type) {\r\n        case actionTypes.SET_USER:\r\n            return {\r\n                ...state,\r\n                user: action.user,\r\n            };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n","import { Button } from '@material-ui/core'\r\nimport React from 'react'\r\nimport \"./login.css\"\r\nimport { auth, provider } from './firebase';\r\nimport { useStateValue } from './StateProvider';\r\nimport { actionTypes } from './reducer';\r\n\r\nexport default function Login() {\r\n    const [{}, dispatch] = useStateValue();\r\n\r\n    const signIn = ()=>{\r\n        auth\r\n          .signInWithPopup(provider)\r\n          .then((result)=>{\r\n              dispatch({\r\n                  type: actionTypes.SET_USER,\r\n                  user: result.user,\r\n              })\r\n          })\r\n          .catch((error)=>{alert(error.message)});\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"login__container\">\r\n                <div className=\"img\"></div>\r\n                <h2>Sign in to What'sApp</h2>\r\n                <h3>Sign in using Google</h3>\r\n                <Button onClick={signIn}>\r\n                    SignIn\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport Sidebar from './Sidebar.js';\nimport Chat from './Chat';\nimport './Chat.css';\nimport { useState } from 'react';\nimport { Route, Switch, BrowserRouter as Router } from 'react-router-dom';\nimport Login from './Login';\nimport { useStateValue } from './StateProvider';\n\n\nfunction App() {\n  let [{user}, dispatch] = useStateValue();\n  // if(localStorage.getItem(\"user\")){\n  //   let user_pre = JSON.parse(localStorage.getItem(\"user\"));\n  //   if(alert(\"User \"+user_pre.providerData[0].displayName+\" already LoggedIn in this system, do you want to still continue?\")){\n  //     user = user_pre;\n  //   }\n  // }else{\n  //   localStorage.setItem(\"user\", JSON.stringify(user));\n  // }\n  \n  return (\n    <div>\n    {user==null ? <Login/> : (\n    <div className=\"app\">\n      <div className=\"app__body\">\n      <Router>\n        <Sidebar user={user} />\n        <Switch>\n          <Route path=\"/rooms/:roomId\">\n            <Chat />\n          </Route>\n          <Route path=\"/\">\n            <Chat />\n          </Route>\n        </Switch>\n      </Router>\n      </div>\n      </div>\n    )}\n    </div>\n);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport reducer, {initialState} from \"./reducer\";\nimport {StateProvider} from \"./StateProvider\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n    <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}